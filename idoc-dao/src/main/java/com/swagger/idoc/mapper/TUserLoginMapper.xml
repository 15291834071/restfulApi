<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.swagger.idoc.mapper.TUserLoginMapper" >
  <resultMap id="BaseResultMap" type="com.swagger.idoc.po.TUserLogin" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="login_date" property="loginDate" jdbcType="TIMESTAMP" />
    <result column="login_failure_count" property="loginFailureCount" jdbcType="INTEGER" />
    <result column="login_count" property="loginCount" jdbcType="INTEGER" />
    <result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="login_type" property="loginType" jdbcType="VARCHAR" />
    <result column="auth_code" property="authCode" jdbcType="VARCHAR" />
    <result column="login_status" property="loginStatus" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_date, modify_date, login_date, login_failure_count, login_count, login_ip, 
    user_id, login_type, auth_code, login_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.swagger.idoc.po.TUserLoginExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_user_login
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_user_login
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.swagger.idoc.po.TUserLogin" >
    insert into t_user_login (id, create_date, modify_date, 
      login_date, login_failure_count, login_count, 
      login_ip, user_id, login_type, 
      auth_code, login_status)
    values (#{id,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{loginDate,jdbcType=TIMESTAMP}, #{loginFailureCount,jdbcType=INTEGER}, #{loginCount,jdbcType=INTEGER}, 
      #{loginIp,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{loginType,jdbcType=VARCHAR}, 
      #{authCode,jdbcType=VARCHAR}, #{loginStatus,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.swagger.idoc.po.TUserLogin" >
    insert into t_user_login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
      <if test="loginDate != null" >
        login_date,
      </if>
      <if test="loginFailureCount != null" >
        login_failure_count,
      </if>
      <if test="loginCount != null" >
        login_count,
      </if>
      <if test="loginIp != null" >
        login_ip,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="loginType != null" >
        login_type,
      </if>
      <if test="authCode != null" >
        auth_code,
      </if>
      <if test="loginStatus != null" >
        login_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginDate != null" >
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginFailureCount != null" >
        #{loginFailureCount,jdbcType=INTEGER},
      </if>
      <if test="loginCount != null" >
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null" >
        #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginType != null" >
        #{loginType,jdbcType=VARCHAR},
      </if>
      <if test="authCode != null" >
        #{authCode,jdbcType=VARCHAR},
      </if>
      <if test="loginStatus != null" >
        #{loginStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.swagger.idoc.po.TUserLoginExample" resultType="java.lang.Integer" >
    select count(*) from t_user_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.swagger.idoc.po.TUserLogin" >
    update t_user_login
    <set >
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginDate != null" >
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loginFailureCount != null" >
        login_failure_count = #{loginFailureCount,jdbcType=INTEGER},
      </if>
      <if test="loginCount != null" >
        login_count = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="loginIp != null" >
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginType != null" >
        login_type = #{loginType,jdbcType=VARCHAR},
      </if>
      <if test="authCode != null" >
        auth_code = #{authCode,jdbcType=VARCHAR},
      </if>
      <if test="loginStatus != null" >
        login_status = #{loginStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.swagger.idoc.po.TUserLogin" >
    update t_user_login
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      login_failure_count = #{loginFailureCount,jdbcType=INTEGER},
      login_count = #{loginCount,jdbcType=INTEGER},
      login_ip = #{loginIp,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      login_type = #{loginType,jdbcType=VARCHAR},
      auth_code = #{authCode,jdbcType=VARCHAR},
      login_status = #{loginStatus,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.idoc.swagger.mapper.TDocAuthorizationMapper">
  <resultMap id="BaseResultMap" type="com.idoc.swagger.po.TDocAuthorization">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="licensor_id" jdbcType="INTEGER" property="licensorId" />
    <result column="licensee_id" jdbcType="INTEGER" property="licenseeId" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="licence_time" jdbcType="VARCHAR" property="licenceTime" />
    <result column="if_cancel_auth" jdbcType="TINYINT" property="ifCancelAuth" />
    <result column="right_str" jdbcType="VARCHAR" property="rightStr" />
  </resultMap>
  <sql id="Base_Column_List">
    id, licensor_id, licensee_id, project_id, licence_time, if_cancel_auth, right_str
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_doc_authorization_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_doc_authorization_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.idoc.swagger.po.TDocAuthorization">
    insert into t_doc_authorization_record (id, licensor_id, licensee_id, 
      project_id, licence_time, if_cancel_auth, 
      right_str)
    values (#{id,jdbcType=INTEGER}, #{licensorId,jdbcType=INTEGER}, #{licenseeId,jdbcType=INTEGER}, 
      #{projectId,jdbcType=INTEGER}, #{licenceTime,jdbcType=VARCHAR}, #{ifCancelAuth,jdbcType=TINYINT}, 
      #{rightStr,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.idoc.swagger.po.TDocAuthorization">
    insert into t_doc_authorization_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="licensorId != null">
        licensor_id,
      </if>
      <if test="licenseeId != null">
        licensee_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="licenceTime != null">
        licence_time,
      </if>
      <if test="ifCancelAuth != null">
        if_cancel_auth,
      </if>
      <if test="rightStr != null">
        right_str,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="licensorId != null">
        #{licensorId,jdbcType=INTEGER},
      </if>
      <if test="licenseeId != null">
        #{licenseeId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="licenceTime != null">
        #{licenceTime,jdbcType=VARCHAR},
      </if>
      <if test="ifCancelAuth != null">
        #{ifCancelAuth,jdbcType=TINYINT},
      </if>
      <if test="rightStr != null">
        #{rightStr,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.idoc.swagger.po.TDocAuthorization">
    update t_doc_authorization_record
    <set>
      <if test="licensorId != null">
        licensor_id = #{licensorId,jdbcType=INTEGER},
      </if>
      <if test="licenseeId != null">
        licensee_id = #{licenseeId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="licenceTime != null">
        licence_time = #{licenceTime,jdbcType=VARCHAR},
      </if>
      <if test="ifCancelAuth != null">
        if_cancel_auth = #{ifCancelAuth,jdbcType=TINYINT},
      </if>
      <if test="rightStr != null">
        right_str = #{rightStr,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.idoc.swagger.po.TDocAuthorization">
    update t_doc_authorization_record
    set licensor_id = #{licensorId,jdbcType=INTEGER},
      licensee_id = #{licenseeId,jdbcType=INTEGER},
      project_id = #{projectId,jdbcType=INTEGER},
      licence_time = #{licenceTime,jdbcType=VARCHAR},
      if_cancel_auth = #{ifCancelAuth,jdbcType=TINYINT},
      right_str = #{rightStr,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.idoc.swagger.po.TDocAuthorization">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="licensor_id" jdbcType="INTEGER" property="licensorId" />
    <result column="licensee_id" jdbcType="INTEGER" property="licenseeId" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="licence_time" jdbcType="VARCHAR" property="licenceTime" />
    <result column="if_cancel_auth" jdbcType="TINYINT" property="ifCancelAuth" />
  </resultMap>
  <sql id="Base_Column_List">
    id, licensor_id, licensee_id, project_id, licence_time, if_cancel_auth
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_doc_authorization_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_doc_authorization_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.idoc.swagger.po.TDocAuthorization">
    insert into t_doc_authorization_record (id, licensor_id, licensee_id, 
      project_id, licence_time, if_cancel_auth
      )
    values (#{id,jdbcType=INTEGER}, #{licensorId,jdbcType=INTEGER}, #{licenseeId,jdbcType=INTEGER}, 
      #{projectId,jdbcType=INTEGER}, #{licenceTime,jdbcType=VARCHAR}, #{ifCancelAuth,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.idoc.swagger.po.TDocAuthorization">
    insert into t_doc_authorization_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="licensorId != null">
        licensor_id,
      </if>
      <if test="licenseeId != null">
        licensee_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="licenceTime != null">
        licence_time,
      </if>
      <if test="ifCancelAuth != null">
        if_cancel_auth,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="licensorId != null">
        #{licensorId,jdbcType=INTEGER},
      </if>
      <if test="licenseeId != null">
        #{licenseeId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="licenceTime != null">
        #{licenceTime,jdbcType=VARCHAR},
      </if>
      <if test="ifCancelAuth != null">
        #{ifCancelAuth,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.idoc.swagger.po.TDocAuthorization">
    update t_doc_authorization_record
    <set>
      <if test="licensorId != null">
        licensor_id = #{licensorId,jdbcType=INTEGER},
      </if>
      <if test="licenseeId != null">
        licensee_id = #{licenseeId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="licenceTime != null">
        licence_time = #{licenceTime,jdbcType=VARCHAR},
      </if>
      <if test="ifCancelAuth != null">
        if_cancel_auth = #{ifCancelAuth,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.idoc.swagger.po.TDocAuthorization">
    update t_doc_authorization_record
    set licensor_id = #{licensorId,jdbcType=INTEGER},
      licensee_id = #{licenseeId,jdbcType=INTEGER},
      project_id = #{projectId,jdbcType=INTEGER},
      licence_time = #{licenceTime,jdbcType=VARCHAR},
      if_cancel_auth = #{ifCancelAuth,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
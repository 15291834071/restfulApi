<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idoc.swagger.mapper.TDocReqParamMapper" >
  <resultMap id="BaseResultMap" type="com.idoc.swagger.po.TDocReqParam" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="path_item_id" property="pathItemId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="defa" property="defa" jdbcType="VARCHAR" />
    <result column="isrequired" property="isrequired" jdbcType="BIT" />
    <result column="cut" property="cut" jdbcType="VARCHAR" />
    <result column="ref_id" property="refId" jdbcType="INTEGER" />
    <result column="isarr" property="isarr" jdbcType="BIT" />
    <result column="value_max" property="valueMax" jdbcType="INTEGER" />
    <result column="min_value" property="minValue" jdbcType="INTEGER" />
    <result column="max_length" property="maxLength" jdbcType="INTEGER" />
    <result column="min_length" property="minLength" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.idoc.swagger.po.TDocReqParam" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, path_item_id, name, location, type, defa, isrequired, cut, ref_id, isarr, value_max, 
    min_value, max_length, min_length
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_doc_req_param
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_doc_req_param
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.idoc.swagger.po.TDocReqParam" >
    insert into t_doc_req_param (id, path_item_id, name, 
      location, type, defa, 
      isrequired, cut, ref_id, 
      isarr, value_max, min_value, 
      max_length, min_length, description
      )
    values (#{id,jdbcType=INTEGER}, #{pathItemId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{defa,jdbcType=VARCHAR}, 
      #{isrequired,jdbcType=BIT}, #{cut,jdbcType=VARCHAR}, #{refId,jdbcType=INTEGER}, 
      #{isarr,jdbcType=BIT}, #{valueMax,jdbcType=INTEGER}, #{minValue,jdbcType=INTEGER}, 
      #{maxLength,jdbcType=INTEGER}, #{minLength,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.idoc.swagger.po.TDocReqParam" >
    insert into t_doc_req_param
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pathItemId != null" >
        path_item_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="defa != null" >
        defa,
      </if>
      <if test="isrequired != null" >
        isrequired,
      </if>
      <if test="cut != null" >
        cut,
      </if>
      <if test="refId != null" >
        ref_id,
      </if>
      <if test="isarr != null" >
        isarr,
      </if>
      <if test="valueMax != null" >
        value_max,
      </if>
      <if test="minValue != null" >
        min_value,
      </if>
      <if test="maxLength != null" >
        max_length,
      </if>
      <if test="minLength != null" >
        min_length,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pathItemId != null" >
        #{pathItemId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="defa != null" >
        #{defa,jdbcType=VARCHAR},
      </if>
      <if test="isrequired != null" >
        #{isrequired,jdbcType=BIT},
      </if>
      <if test="cut != null" >
        #{cut,jdbcType=VARCHAR},
      </if>
      <if test="refId != null" >
        #{refId,jdbcType=INTEGER},
      </if>
      <if test="isarr != null" >
        #{isarr,jdbcType=BIT},
      </if>
      <if test="valueMax != null" >
        #{valueMax,jdbcType=INTEGER},
      </if>
      <if test="minValue != null" >
        #{minValue,jdbcType=INTEGER},
      </if>
      <if test="maxLength != null" >
        #{maxLength,jdbcType=INTEGER},
      </if>
      <if test="minLength != null" >
        #{minLength,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.idoc.swagger.po.TDocReqParam" >
    update t_doc_req_param
    <set >
      <if test="pathItemId != null" >
        path_item_id = #{pathItemId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="defa != null" >
        defa = #{defa,jdbcType=VARCHAR},
      </if>
      <if test="isrequired != null" >
        isrequired = #{isrequired,jdbcType=BIT},
      </if>
      <if test="cut != null" >
        cut = #{cut,jdbcType=VARCHAR},
      </if>
      <if test="refId != null" >
        ref_id = #{refId,jdbcType=INTEGER},
      </if>
      <if test="isarr != null" >
        isarr = #{isarr,jdbcType=BIT},
      </if>
      <if test="valueMax != null" >
        value_max = #{valueMax,jdbcType=INTEGER},
      </if>
      <if test="minValue != null" >
        min_value = #{minValue,jdbcType=INTEGER},
      </if>
      <if test="maxLength != null" >
        max_length = #{maxLength,jdbcType=INTEGER},
      </if>
      <if test="minLength != null" >
        min_length = #{minLength,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.idoc.swagger.po.TDocReqParam" >
    update t_doc_req_param
    set path_item_id = #{pathItemId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      defa = #{defa,jdbcType=VARCHAR},
      isrequired = #{isrequired,jdbcType=BIT},
      cut = #{cut,jdbcType=VARCHAR},
      ref_id = #{refId,jdbcType=INTEGER},
      isarr = #{isarr,jdbcType=BIT},
      value_max = #{valueMax,jdbcType=INTEGER},
      min_value = #{minValue,jdbcType=INTEGER},
      max_length = #{maxLength,jdbcType=INTEGER},
      min_length = #{minLength,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.idoc.swagger.po.TDocReqParam" >
    update t_doc_req_param
    set path_item_id = #{pathItemId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      defa = #{defa,jdbcType=VARCHAR},
      isrequired = #{isrequired,jdbcType=BIT},
      cut = #{cut,jdbcType=VARCHAR},
      ref_id = #{refId,jdbcType=INTEGER},
      isarr = #{isarr,jdbcType=BIT},
      value_max = #{valueMax,jdbcType=INTEGER},
      min_value = #{minValue,jdbcType=INTEGER},
      max_length = #{maxLength,jdbcType=INTEGER},
      min_length = #{minLength,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>